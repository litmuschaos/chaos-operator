name: build-pipeline
on:
  pull_request:
    branches: [v2.0.x]
    types: [opened, synchronize, reopened]

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      # Checkout to the latest commit
      # On specific directory/path
      - name: Checkout
        uses: actions/checkout@v2

      - name: gofmt check
        run: make gofmt-check

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1

      - name: unused-package check
        run: make unused-package-check

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high     

  trivy:
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build an image from Dockerfile
        run: |
          docker build -f build/Dockerfile -t docker.io/litmuschaos/chaos-operator:${{ github.sha }} . --build-arg TARGETPLATFORM=linux/amd64
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/litmuschaos/chaos-operator:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'        

  image-build:
    runs-on: ubuntu-latest
    needs: pre-checks
    steps:
      # Checkout to the latest commit
      # On specific directory/path
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker Image
        env:
          DOCKER_REPO: litmuschaos
          DOCKER_IMAGE: chaos-operator
          DOCKER_TAG: ci
        run: |
          make build-amd64
          docker save -o ${{ github.workspace }}/image.tar litmuschaos/chaos-operator:ci
          chmod +x ${{ github.workspace }}/image.tar
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myimage
          path: |
            ${{ github.workspace }}/image.tar

  tests:
    runs-on: ubuntu-latest
    needs: image-build
    steps:
      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      # Checkout to the latest commit
      # On specific directory/path
      - name: Checkout
        uses: actions/checkout@v2

      #Install and configure a kind cluster
      - name: Installing Prerequisites (K3S Cluster)
        env: 
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          mkdir -p $HOME/.kube
          cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
          kubectl get nodes

      - name: Dependency checks
        run: |
          make deps

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: ${{ github.workspace }}
          
      - name: Load Docker image
        run: |
          docker load --input ${{ github.workspace }}/image.tar
        shell: bash      

      - name: Running Go BDD Test
        run: |
          make test
