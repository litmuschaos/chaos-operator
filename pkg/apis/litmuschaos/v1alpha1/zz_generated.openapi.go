// +build !ignore_autogenerated

/*
Copyright 2019 LitmusChaos Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngine":           schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngine(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineSpec":       schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngineSpec(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineStatus":     schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngineStatus(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperiment":       schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperiment(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentSpec":   schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperimentSpec(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentStatus": schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperimentStatus(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplate":         schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplate(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateSpec":     schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplateSpec(ref),
		"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateStatus":   schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplateStatus(ref),
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngine(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosEngine is the Schema for the chaosengines API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineSpec", "github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosEngineStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngineSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosEngineSpec defines the desired state of ChaosEngine",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosEngineStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosEngineStatus defines the observed state of ChaosEngine",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperiment(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosExperiment is the Schema for the chaosexperiments API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentSpec", "github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosExperimentStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperimentSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosExperimentSpec defines the desired state of ChaosExperiment",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosExperimentStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosExperimentStatus defines the observed state of ChaosExperiment",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplate(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosTemplate is the Schema for the chaostemplates API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateSpec", "github.com/litmuschaos/chaos-operator/pkg/apis/litmuschaos/v1alpha1.ChaosTemplateStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplateSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosTemplateSpec defines the desired state of ChaosTemplate",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_litmuschaos_v1alpha1_ChaosTemplateStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ChaosTemplateStatus defines the observed state of ChaosTemplate",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
